# This generates initial SSL certificates and sets up the regular updates from
# LetsEncrypt.  Let's Encrypt has a rate limit of 5 duplicate certificates per
# week, which is waived for renewals.  Certificates must be renewed every 90
# days, and we set up a cron task to do so monthly.  It's recommended to do so
# 60 days before expiration, and we give ourselves some room to catch problems.

- name: Download Current Let's Encrypt Release
  git: repo=https://github.com/letsencrypt/letsencrypt
       dest=/root/letsencrypt
       version=master
       force=yes

- name: Create Directory for Let's Encrypt Configuration and Certificates
  file: state=directory path=/etc/letsencrypt

- name: Configure LetsEncrypt
  template:
    src=etc_letsencrypt_cli.conf.j2
    dest=/etc/letsencrypt/cli.conf

- name: Install LetsEncrypt Package Dependencies
  command: /root/letsencrypt/letsencrypt-auto --help
  register: le_deps_result
  changed_when: "'Bootstrapping dependencies' in le_deps_result.stdout"

- name: Create Directory for Pre-Renewal Scripts
  file: state=directory path=/etc/letsencrypt/prerenew

- name: Create Directory for Post-Renewal Scripts
  file: state=directory path=/etc/letsencrypt/postrenew

- name: Create Pre-Renew Hook to Stop Apache
  copy:
    content: "#!/bin/bash\n\nservice apache2 stop\n"
    dest: /etc/letsencrypt/prerenew/apache
    mode: 0755

- name: Create Post-Renew Hook to Start Apache
  copy:
    content: "#!/bin/bash\n\nservice apache2 start\n"
    dest: /etc/letsencrypt/postrenew/apache
    mode: 0755

- name: Install crontab Entry for Let's Encrypt
  copy:
    src: etc_cron.monthly_letsencrypt-renew
    dest: /etc/cron.monthly/letsencrypt-renew
    mode: 0755

- name: Create Live Directory for Let's Encrypt cron Job
  file: state=directory path=/etc/letsencrypt/live

- name: Get an SSL Certificate for {{ domain }} from Let's Encrypt
  script: letsencrypt-gencert {{ domain }} creates=/etc/letsencrypt/live/{{ domain }}/privkey.pem
  when: ansible_ssh_user != "vagrant"

- name: Modify Permissions to Allow ssl-cert Group Access
  file: path=/etc/letsencrypt/archive owner=root group=ssl-cert mode=0750
  when: ansible_ssh_user != "vagrant"

### Several steps to install a self-signed wildcard key to support offline testing

- name: Create live directory for testing keys
  file: dest=/etc/letsencrypt/live/{{ domain }} state=directory
    owner=root group=root mode=0755
  when: ansible_ssh_user == "vagrant"

- name: Copy SSL wildcard private key for testing
  copy: src=wildcard_private.key
    dest=/etc/letsencrypt/live/{{ domain }}/privkey.pem
    owner=root group=ssl-cert mode=0640
  register: private_key
  when: ansible_ssh_user == "vagrant"

- name: Copy SSL public certificate into place for testing
  copy: src=wildcard_public_cert.crt
    dest=/etc/letsencrypt/live/{{ domain }}/cert.pem
    group=root owner=root mode=0644
  register: certificate
  notify: restart apache
  when: ansible_ssh_user == "vagrant"

- name: Copy SSL CA combined certificate into place for testing
  copy: src=wildcard_ca.pem
    dest=/etc/letsencrypt/live/{{ domain }}/chain.pem
    group=root owner=root mode=0644
  register: ca_certificate
  notify: restart apache
  when: ansible_ssh_user == "vagrant"

- name: Create a combined SSL cert for testing
  shell: cat /etc/letsencrypt/live/{{ domain }}/cert.pem
    /etc/letsencrypt/live/{{ domain }}/chain.pem >
    /etc/letsencrypt/live/{{ domain }}/fullchain.pem
  when: (private_key.changed or certificate.changed or ca_certificate.changed) and ansible_ssh_user == "vagrant"

- name: Set permissions on combined SSL public cert
  file: name=/etc/letsencrypt/live/{{ domain }}/fullchain.pem mode=0644
  notify: restart apache
  when: ansible_ssh_user == "vagrant"

### Back to normal
