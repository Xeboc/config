# Installs an encrypted encfs folder for several other services.  This isn't a
# foolproof safety mechanism by any means, but it does add a layer of encryption
# to all data at rest, discouraging easy access by others.  The password is
# only stored locally in the vault encrypted file, and is needed for all
# reboots or crashes.

- name: Install encfs & fuse
  apt: pkg={{ item }} state=installed
  with_items:
    - encfs
    - fuse
    - libfuse-dev
  tags:
    - dependencies

- name: Create Decrypted Directory
  file: state=directory path=/decrypted mode=0775

- name: Create Encrypted Directory
  file: state=directory path=/encrypted

- name: Check if /encrypted Directory is Empty
  find: paths=/encrypted hidden=True
  register: encfs_check

# Using standard mode.  Paranoia mode prevents hard links, which are needed
# for PostgreSQL to function.
- name: If /encrypted is Empty, Create encfs
  shell: printf "s\n{{ encfs_password }}" | encfs /encrypted /decrypted --public --stdinpass && touch /decrypted/lock
  when: encfs_check.matched == 0
  no_log: True

- name: If /encrypted Isn't Empty and Mounted, Mount it
  shell: printf "{{ encfs_password }}" | encfs /encrypted /decrypted --public --stdinpass
    creates="/decrypted/lock"
  when: encfs_check.matched != 0
  no_log: True
