---
# Install and configure packages related to security

- name: Ensure repository key for Lynis is in place
  apt_key: url=http://packages.cisofy.com/keys/cisofy-software-public.key state=present
  tags:
    - dependencies

- name: Add Lynis repository
  apt_repository: repo="deb https://packages.cisofy.com/community/lynis/deb/ {{ ansible_distribution_release }} main"
  tags:
    - dependencies

- name: Install security-related packages
  apt: pkg={{ item }} state=installed update_cache=yes
  with_items:
    - fail2ban
    - whois
    - lynis
    - rkhunter
    - unhide
    - apparmor
    - apparmor-profiles
    - apparmor-profiles-extra
    - apparmor-utils
    - logcheck
    - samhain
    - clamav-daemon
    - inotify-tools
  tags:
    - dependencies

- name: get public IP
  ipify_facts:

- name: Copy fail2ban configuration into place
  template: src=etc_fail2ban_jail.local.j2 dest=/etc/fail2ban/jail.local
  notify: restart fail2ban

- name: Copy fail2ban dovecot configuration into place
  copy: src=etc_fail2ban_filter.d_dovecot-pop3imap.conf dest=/etc/fail2ban/filter.d/dovecot-pop3imap.conf
  notify: restart fail2ban

- name: Update sshd config for more secure defaults
  template: src=etc_ssh_sshd_config.j2 dest=/etc/ssh/sshd_config
  notify: restart ssh

- name: Update ssh config for more secure defaults
  template: src=etc_ssh_ssh_config.j2 dest=/etc/ssh/ssh_config

- name: Copy rkhunter configurations into place
  copy: src={{ item.src }} dest={{ item.dest }} group=root owner=root
  with_items:
  - { src: 'etc_default_rkhunter', dest: '/etc/default/rkhunter' }
  - { src: 'etc_rkhunter.conf', dest: '/etc/rkhunter.conf' }

- name: Create rkhunter's database of key system files
  command: rkhunter --propupd
    creates=/var/lib/rkhunter/db/rkhunter.dat

- name: Create Lynis log directory
  file: state=directory path=/var/log/lynis mode=0755

- name: Copy Lynis cronjob task
  template: src=etc_cron.weekly_lynis dest=/etc/cron.weekly/lynis mode=0755

- name: Adjust login password defaults and umask
  lineinfile: dest=/etc/login.defs regexp="{{ item.regexp }}" line="{{ item.line}}" backup=yes state=present backrefs=yes
  with_items:
    - { regexp: ^UMASK, line: "UMASK   027" }
    - { regexp: ^PASS_MIN_DAYS, line: "PASS_MIN_DAYS 1" }
    - { regexp: ^PASS_MAX_DAYS, line: "PASS_MAX_DAYS 980" }
    - { regexp: ^PASS_WARN_AGE, line: "PASS_WARN_AGE 21" }

- name: Adjust init.d/rc umask
  lineinfile: dest=/etc/init.d/rc regexp=^umask line="umask 027" backup=yes state=present backrefs=yes

- name: Remove compilers
  apt: pkg={{ item }} state=absent autoremove=yes purge=yes
  with_items:
    - gcc
    - g++

- name: Change logcheck to send mail to root
  lineinfile: dest=/etc/logcheck/logcheck.conf regexp=^SENDMAILTO line="SENDMAILTO=\"root\"" backup=yes state=present backrefs=yes

- name: Download Linux Malware Detect installer
  unarchive:
    src=http://www.rfxn.com/downloads/maldetect-current.tar.gz
    dest=/root
    remote_src=yes

- name: Install Linux Malware Detect
  shell: /root/maldetect-1.6/install.sh chdir=/root/maldetect-1.6/ creates=/usr/local/maldetect

- name: Change Malware Detect configuration
  lineinfile: dest=/usr/local/maldetect/conf.maldet regexp="{{ item.regexp }}" line="{{ item.line}}" backup=yes state=present backrefs=yes
  with_items:
    - { regexp: ^email_alert, line: "email_alert=\"1\"" }
    - { regexp: ^email_addr, line: "email_addr=\"root\"" }
    - { regexp: ^# default_monitor_mode=\"users\", line: "default_monitor_mode=\"users\"" }

- name: Ensure services are started
  service: name={{ item }} state=restarted enabled=yes
  with_items:
    - fail2ban
    - clamav-daemon
    - clamav-freshclam
    - samhain
    - maldet
  ignore_errors: yes
