#!/bin/sh

# A named pipe is used to pipe output to logger and syslog
named_pipe=/tmp/$$.tmp

# Remove named pipe on the exit signal
trap "rm -f $named_pipe" EXIT

# Create named pipe
mknod $named_pipe p

# Start logger process in background with STDIN coming from named pipe.
logger <$named_pipe -t clamsmtp &

# Redirect stderr and stdout to named_pipe
exec 1>$named_pipe 2>&1

# Gather subject from quarantined email
SUBJECT="`awk '/[Ss][Uu][Bb][Jj][Ee][Cc][Tt]: /' $EMAIL`"

# Email address where the notification email comes from
MAILFROM="clamsmtp@{{ domain }}"
ADMIN="postmaster@{{ domain }}"

notify_user() {
  printf "HELO `hostname -f`\n"
  printf "MAIL FROM:<$MAILFROM>\n"
  printf "RCPT TO:<$ADMIN>\n"
  printf "DATA\n"
  sleep 1
  printf "From: $MAILFROM\n"
  printf "To: <$ADMIN>\n"
  printf "Subject: Virus Found in Email\n"
  printf "Greetings,\n"
  printf "\n"
  printf "A virus or spam email has been found by the mail system.\n"
  printf "\n"
  printf "Date: `date`\n"
  printf "To: $RECIPIENTS\n"
  printf "From: $SENDER\n"
  printf "$SUBJECT\n"
  printf "Virus/spam name: $VIRUS\n"
  printf "\n"
  printf "Best,\n"
  printf "ClamSMTP\n"
  printf ".\n"
  printf "quit\n"
}

# Netcat is used to send directly to clamsmtp's smtpd listener to avoid an
# endless loop. If mailx is used, the alert email contains $VIRUS, which the 
# text can then trigger another alert email.
notify_user | nc localhost 10025

# Remove quarantined email file
if [ -n "$EMAIL" ]; then
  rm "$EMAIL"
fi
